<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kotlin on</title><link>https://disj11.github.io/tags/kotlin/</link><description>Recent content in Kotlin on</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Tue, 10 Jan 2023 23:59:43 +0900</lastBuildDate><atom:link href="https://disj11.github.io/tags/kotlin/index.xml" rel="self" type="application/rss+xml"/><item><title>Kotlin: Memory Efficient Iterable Data Processing with Sequences</title><link>https://disj11.github.io/en/memory-efficient-iterable-data-processing-with-sequences/</link><pubDate>Tue, 10 Jan 2023 23:59:43 +0900</pubDate><guid>https://disj11.github.io/en/memory-efficient-iterable-data-processing-with-sequences/</guid><description>
Let's find out how do they differ in behavior between Iterable and Sequence in Kotlin.</description></item><item><title>Kotlin: 시퀀스를 활용한 메모리 효율적인 데이터 처리 방법</title><link>https://disj11.github.io/memory-efficient-iterable-data-processing-with-sequences/</link><pubDate>Tue, 10 Jan 2023 23:59:43 +0900</pubDate><guid>https://disj11.github.io/memory-efficient-iterable-data-processing-with-sequences/</guid><description>
Kotlin에서 Iterable과 Sequence 간의 동작이 어떻게 다른지 알아보자.</description></item><item><title>Kotlin: 확장 함수의 수신 객체</title><link>https://disj11.github.io/nullable-receiver-in-extension-functions-of-kotlin/</link><pubDate>Sun, 08 Jan 2023 21:22:27 +0900</pubDate><guid>https://disj11.github.io/nullable-receiver-in-extension-functions-of-kotlin/</guid><description>
확장 함수의 수신 객체는 null 값이 될 수 있다.</description></item><item><title>Nullable Receiver in Extension Functions of Kotlin</title><link>https://disj11.github.io/en/nullable-receiver-in-extension-functions-of-kotlin/</link><pubDate>Sun, 08 Jan 2023 21:22:27 +0900</pubDate><guid>https://disj11.github.io/en/nullable-receiver-in-extension-functions-of-kotlin/</guid><description>
The receiver object in extension functions allows null value.</description></item><item><title>Kotlin에서 데이터 클래스를 사용할 때 주의할 점</title><link>https://disj11.github.io/notes-on-using-data-classes-in-kotlin/</link><pubDate>Sun, 08 Jan 2023 14:39:00 +0900</pubDate><guid>https://disj11.github.io/notes-on-using-data-classes-in-kotlin/</guid><description>
Kotlin에서 데이터 클래스를 주의해야 할 사항이 있다. 데이터 클래스는 자동으로 copy() 함수를 생성하는데, 이 함수를 통해 속성값을 수정한 새로운 인스턴스를 생성</description></item><item><title>Notes on Using Data Classes in Kotlin</title><link>https://disj11.github.io/en/notes-on-using-data-classes-in-kotlin/</link><pubDate>Sun, 08 Jan 2023 14:39:00 +0900</pubDate><guid>https://disj11.github.io/en/notes-on-using-data-classes-in-kotlin/</guid><description>
Take note of the copy() function When using data classes in Kotlin</description></item></channel></rss>