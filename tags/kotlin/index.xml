<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kotlin on Life Log</title><link>https://disj11.github.io/tags/kotlin/</link><description>Recent content in kotlin on Life Log</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Sun, 08 Jan 2023 14:39:00 +0900</lastBuildDate><atom:link href="https://disj11.github.io/tags/kotlin/index.xml" rel="self" type="application/rss+xml"/><item><title>Notes on Using Data Classes in Kotlin</title><link>https://disj11.github.io/notes-on-using-data-classes-in-kotlin/</link><pubDate>Sun, 08 Jan 2023 14:39:00 +0900</pubDate><guid>https://disj11.github.io/notes-on-using-data-classes-in-kotlin/</guid><description>
When we use data classes in Kotlin, there are a few things to keep in mind.
Kotlin data classes automatically create a copy() function. If a property of a class must maintain an invariant, this function may not behave as expected. For example, we have the following code.
data class Point private constructor( val value: Int, ) { companion object { fun of(value: Int) = if (value &amp;lt; 0) { throw IllegalArgumentException(&amp;#34;The value argument should always be set to a positive value, but the current value is $value&amp;#34;) } else { Point(value) } } } Is the value property of the Point class instance always positive?</description></item></channel></rss>