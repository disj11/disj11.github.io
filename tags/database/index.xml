<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Database on</title><link>https://disj11.github.io/tags/database/</link><description>Recent content in Database on</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Tue, 28 Sep 2021 20:30:02 +0900</lastBuildDate><atom:link href="https://disj11.github.io/tags/database/index.xml" rel="self" type="application/rss+xml"/><item><title>트랜잭션 격리 수준(Isolation Level)의 이해: 데이터 일관성과 성능의 균형</title><link>https://disj11.github.io/understanding-isolation-level-in-database-management/</link><pubDate>Tue, 28 Sep 2021 20:30:02 +0900</pubDate><guid>https://disj11.github.io/understanding-isolation-level-in-database-management/</guid><description>
트랜잭션 격리 수준은 데이터베이스에서 동시성 문제를 제어하고 데이터 일관성을 유지하기 위한 핵심 개념입니다. Dirty Read, Non-repeatable Read, Phantom Read 가 무엇인지 알아보고, 네 가지 주요 격리 수준(Read Uncommitted, Read Committed, Repeatable Read, Serializable)의 특징을 알아봅니다.</description></item></channel></rss>